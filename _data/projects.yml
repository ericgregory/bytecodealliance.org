# List of Bytecode Alliance projects 

- name: cap-std
  description: Capability-based version of the Rust standard library.
  repo: https://github.com/bytecodealliance/cap-std
  site: 
  docs:
  active: true 
  labels: []
  
- name: cargo-component
  description: A cargo subcommand for building WebAssembly components according to the component model proposal.
  repo: https://github.com/bytecodealliance/cargo-component
  site: 
  docs:
  active: true
  labels: [rust]

- name: cargo-wasi
  description: A lightweight Cargo subcommand to build code for the `wasm32-wasi` target.
  repo: https://github.com/bytecodealliance/cargo-wasi
  site: 
  docs:
  active: false
  labels: [rust]

- name: componentize-dotnet
  description: A package to simplify development of C# Wasm components.
  repo: https://github.com/bytecodealliance/componentize-dotnet/
  site: 
  docs: 
  active: true
  labels: [dotnet]

- name: ComponentizeJS
  description: ESM to WebAssembly component creator, via a SpiderMonkey JS engine embedding.
  repo: https://github.com/bytecodealliance/ComponentizeJS
  site: 
  docs: 
  active: true
  labels: [javascript]

- name: componentize-py
  description: A tool to convert a Python application to a WebAssembly component.
  repo: https://github.com/bytecodealliance/componentize-py
  site: 
  docs: 
  active: true
  labels: [python]

- name: Cranelift
  description: A compiler backend that translates a target-independent intermediate representation into executable machine code.
  repo: https://github.com/bytecodealliance/wasmtime/tree/main/cranelift
  site: https://cranelift.dev/
  docs: https://github.com/bytecodealliance/wasmtime/tree/main/cranelift/docs/
  active: true
  labels: []

- name: go-modules
  description: A Go package hosted by the Bytecode Alliance that collects utilities for Go component development and binding generation.
  repo: https://github.com/bytecodealliance/go-modules
  site: 
  docs: https://pkg.go.dev/go.bytecodealliance.org#section-readme
  active: true
  labels: [go]

- name: Javy
  description: A JavaScript to WebAssembly toolchain.
  repo: https://github.com/bytecodealliance/javy
  site: 
  docs: 
  active: true
  labels: [javascript]

- name: jco
  description: JavaScript toolchain for working with WebAssembly components.
  repo: https://github.com/bytecodealliance/jco
  site: 
  docs: https://bytecodealliance.github.io/jco/
  active: true
  labels: [javascript]

- name: Lucet
  description: A native WebAssembly compiler and runtime designed to safely execute untrusted WebAssembly programs inside your application.
  repo: https://github.com/bytecodealliance/lucet
  site: 
  docs: 
  active: false
  labels: []

- name: regalloc.rs
  description: A work-in-progress modular register allocation algorithm, implemented so as to be used in Cranelift.
  repo: https://github.com/bytecodealliance/regalloc.rs
  site: 
  docs: 
  active: false
  labels: []

- name: regalloc2
  description: A register allocator.
  repo: https://github.com/bytecodealliance/regalloc2
  site: 
  docs: 
  active: true
  labels: []

- name: rust-oci-wasm
  description: A Rust crate implementing the OCI Wasm Specification.
  repo: https://github.com/bytecodealliance/rust-oci-wasm
  site: 
  docs: 
  active: true
  labels: [rust]

- name: rustix
  description: Safe Rust bindings to POSIX/Unix/Linux/Winsock syscalls.
  repo: https://github.com/bytecodealliance/rustix
  site: 
  docs: https://docs.rs/rustix/latest/rustix/
  active: true
  labels: [rust]

- name: sightglass
  description: A benchmarking suite and tooling for Wasmtime and Cranelift.
  repo: https://github.com/bytecodealliance/sightglass
  site: 
  docs: 
  active: true
  labels: []

- name: StarlingMonkey
  description: A SpiderMonkey-based JS runtime on WebAssembly.
  repo: https://github.com/bytecodealliance/StarlingMonkey
  site: 
  docs: 
  active: true
  labels: [starlingmonkey, javascript]

- name: spidermonkey-wasi-embedding
  description: Scripts for building and downloading pre-built versions of SpiderMonkey, compiled to wasm32-wasi as a static library.
  repo: https://github.com/bytecodealliance/spidermonkey-wasi-embedding
  site: 
  docs: 
  active: true
  labels: [starlingmonkey]

- name: system-interface
  description: Extensions to the Rust standard library.
  repo: https://github.com/bytecodealliance/system-interface
  site: 
  docs: 
  active: true
  labels: []

- name: target-lexicon
  description: A library for managing targets for compilers and related tools.
  repo: https://github.com/bytecodealliance/target-lexicon
  site: 
  docs: 
  active: true
  labels: []

- name: VSCode-WIT
  description: A Visual Studio Code extension to recognize and highlight the WebAssembly Interface Type (WIT) Interface Definition Language (IDL).
  repo: https://github.com/bytecodealliance/vscode-wit
  site: 
  docs: 
  active: true
  labels: [dev-tools]

- name: WebAssembly Compositions (WAC)
  description: A tool for composing WebAssembly components together.
  repo: https://github.com/bytecodealliance/wac
  site: 
  docs: 
  active: true
  labels: [dev-tools]

- name: waffle
  description: An SSA IR compiler framework for Wasm-to-Wasm transforms, in Rust.
  repo: https://github.com/bytecodealliance/waffle
  site: 
  docs: https://docs.rs/waffle/latest/waffle/
  active: true
  labels: []

- name: warg
  description: The reference implementation of the Warg protocol, client, and server for distributing WebAssembly components and interfaces as well as core modules.
  repo: https://github.com/bytecodealliance/registry
  site: 
  docs: 
  active: false
  labels: []

- name: wasi-rs
  description: WASI API Bindings for Rust.
  repo: https://github.com/bytecodealliance/wasi-rs
  site: 
  docs: https://docs.rs/wasi/latest/wasi/
  active: true
  labels: [rust]

- name: WASI-Virt
  description: Virtualization component generator for WASI P2.
  repo: https://github.com/bytecodealliance/WASI-Virt
  site: 
  docs: 
  active: true
  labels: [dev-tools]

- name: WebAssembly Micro Runtime (WAMR)
  description: A lightweight standalone WebAssembly (Wasm) runtime for applications cross from embedded, IoT, edge to Trusted Execution Environment (TEE), smart contract, cloud native, and more.
  repo: https://github.com/bytecodealliance/wasm-micro-runtime
  site: https://bytecodealliance.github.io/wamr.dev/
  docs: https://wamr.gitbook.io/document/wamr-in-practice/
  active: true
  labels: [runtime, wamr]

- name: wamr-app-framework
  description: A comprehensive framework for programming WebAssembly (Wasm) applications for device and IoT usages.
  repo: https://github.com/bytecodealliance/wamr-app-framework
  site: 
  docs: 
  active: true
  labels: [wamr]

- name: wamr-python
  description: 
  repo: https://github.com/bytecodealliance/wamr-python
  site: 
  docs: 
  active: false
  labels: [wamr, python]

- name: wamr-rust-sdk
  description: Provides Rust language bindings for WAMR.
  repo: https://github.com/bytecodealliance/wamr-rust-sdk
  site: 
  docs: 
  active: true
  labels: [wamr, rust]

- name: wamr.dev
  description: Website for the WAMR project.
  repo: https://github.com/bytecodealliance/wamr.dev
  site: 
  docs: 
  active: true
  labels: [wamr]

- name: wasm-pkg-tools
  description: CLI and Rust libraries for fetching and publishing Wasm Components to OCI or Warg registries.
  repo: https://github.com/bytecodealliance/wasm-pkg-tools
  site: 
  docs: 
  active: true
  labels: [dev-tools, rust]

- name: wasm-tools
  description: CLI and Rust libraries for low-level manipulation of WebAssembly modules.
  repo: https://github.com/bytecodealliance/wasm-tools
  site: 
  docs: 
  active: true
  labels: [dev-tools, rust]

- name: Wasmtime
  description: A standalone runtime for WebAssembly.
  repo: https://github.com/bytecodealliance/wasmtime
  site: https://wasmtime.dev/
  docs: https://docs.wasmtime.dev/
  active: true
  labels: [runtime, wasmtime]

- name: wasmtime-cpp
  description: C++ embedding of Wasmtime.
  repo: https://github.com/bytecodealliance/wasmtime-cpp
  site: 
  docs: 
  active: true
  labels: [wasmtime, c]

- name: wasmtime-dotnet
  description: .NET embedding of Wasmtime.
  repo: https://github.com/bytecodealliance/wasmtime-dotnet
  site: 
  docs: 
  active: true
  labels: [wasmtime, dotnet]

- name: wasmtime-go
  description: Go embedding of Wasmtime.
  repo: https://github.com/bytecodealliance/wasmtime-go
  site: 
  docs: https://pkg.go.dev/github.com/bytecodealliance/wasmtime-go/
  active: true
  labels: [wasmtime, go]

- name: wasmtime-py
  description: Python embedding of Wasmtime.
  repo: https://github.com/bytecodealliance/wasmtime-py
  site: 
  docs: https://bytecodealliance.github.io/wasmtime-py/
  active: true
  labels: [wasmtime, python]

- name: wasmtime-rb
  description: Ruby embedding of Wasmtime.
  repo: https://github.com/bytecodealliance/wasmtime-rb
  site: 
  docs: 
  active: true
  labels: [wasmtime, ruby]

- name: wasmtime.dev
  description: Website for the Wasmtime project.
  repo: https://github.com/bytecodealliance/wasmtime.dev
  site: 
  docs: 
  active: true
  labels: [wasmtime]

- name: wasmtime-libfuzzer-corpus
  description: 
  repo: https://github.com/bytecodealliance/wasmtime-libfuzzer-corpus
  site: 
  docs: 
  active: false
  labels: [wasmtime]

- name: weval
  description: weval Wasm partial evaluator.
  repo: https://github.com/bytecodealliance/weval
  site: 
  docs: https://docs.rs/crate/weval/latest
  active: true
  labels: []

- name: wit-bindgen
  description: Guest language bindings generator for WIT and the Component Model.
  repo: https://github.com/bytecodealliance/wit-bindgen
  site: 
  docs: 
  active: true
  labels: [dev-tools]

- name: wit-deps
  description: A simple WIT dependency manager binary and Rust library.
  repo: https://github.com/bytecodealliance/wit-deps
  site: 
  docs: 
  active: true
  labels: []

- name: Wizer
  description: A WebAssembly pre-initializer.
  repo: https://github.com/bytecodealliance/wizer
  site: 
  docs: https://docs.rs/wizer/latest/wizer/
  active: true
  labels: []

- name: wRPC
  description: Component-native transport-agnostic RPC protocol and framework based on WebAssembly Interface Types (WIT).
  repo: https://github.com/bytecodealliance/wrpc
  site: 
  docs: https://docs.rs/wrpc/latest/wrpc/
  active: true
  labels: [protocol]


